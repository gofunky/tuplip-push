name: test

on:
  push:
    branches: [ master ]
  pull_request_target:
    branches: [ master ]
    types: [ review_request_removed ]

jobs:
  with-repository:
    name: build and push with repository
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.head_ref }}
      - name: cache docker layers
        uses: satackey/action-docker-layer-caching@v0.0.11
        with:
          key: docker-layers-${{ github.job }}-${{ hashFiles('**/WithRepository.Dockerfile') }}
      - name: build and push docker image
        uses: ./
        id: tuplip
        with:
          rootVersion: '0.1'
          repository: 'gofunky/ignore'
          path: './test'
          dockerfile: 'WithRepository.Dockerfile'
          username: ${{ secrets.DOCKER_USR }}
          password: ${{ secrets.DOCKER_PWD }}
          excludeMajor: true
          excludeMinor: true
      - run: echo "${{ steps.tuplip.outputs.tags }}" | sort > ${{ github.job }}.tags
      - uses: actions/upload-artifact@v2.1.4
        with:
          name: ${{ github.job }}-tags
          path: ${{ github.job }}.tags
  defaults:
    name: build and push with default version and repository
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.head_ref }}
      - name: cache docker layers
        uses: satackey/action-docker-layer-caching@v0.0.11
        with:
          key: docker-layers-${{ github.job }}-${{ hashFiles('**/WithoutRepository.Dockerfile') }}
      - name: build docker image
        uses: ./
        id: tuplip
        with:
          path: './test'
          dockerfile: 'WithoutRepository.Dockerfile'
          exclusiveLatest: true
          buildOnly: true
      - run: echo "${{ steps.tuplip.outputs.tags }}" | sort > ${{ github.job }}.tags
      - uses: actions/upload-artifact@v2.1.4
        with:
          name: ${{ github.job }}-tags
          path: ${{ github.job }}.tags
  from-file:
    name: build and push with repository and version from Dockerfile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.head_ref }}
      - name: cache docker layers
        uses: satackey/action-docker-layer-caching@v0.0.11
        with:
          key: docker-layers-${{ github.job }}-${{ hashFiles('**/WithRepository.Dockerfile') }}
      - name: build and push docker image
        uses: ./
        id: tuplip
        with:
          path: './test'
          dockerfile: 'WithRepository.Dockerfile'
          username: ${{ secrets.DOCKER_USR }}
          password: ${{ secrets.DOCKER_PWD }}
          exclusiveLatest: true
          repository: ''
      - run: echo "${{ steps.tuplip.outputs.tags }}" | sort > ${{ github.job }}.tags
      - uses: actions/upload-artifact@v2.1.4
        with:
          name: ${{ github.job }}-tags
          path: ${{ github.job }}.tags
  with-invalid-repository:
    name: build and push with invalid repository
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.tuplip.outputs.tags }}
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.head_ref }}
      - name: cache docker layers
        uses: satackey/action-docker-layer-caching@v0.0.11
        with:
          key: docker-layers-${{ github.job }}-${{ hashFiles('**/WithRepository.Dockerfile') }}
      - name: build and push docker image
        id: tuplip
        continue-on-error: true
        uses: ./
        with:
          rootVersion: '0.1'
          repository: 'gofunky/invalid'
          path: './test'
          dockerfile: 'WithRepository.Dockerfile'
          username: ${{ secrets.DOCKER_USR }}
          password: ${{ secrets.DOCKER_PWD }}
          excludeMajor: true
          excludeMinor: true  
      - name: check on failures
        if: steps.tuplip.outputs.status == 'success'
        run: exit 1
  without-repository:
    name: build and push without repository
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.tuplip.outputs.tags }}
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.head_ref }}
      - name: cache docker layers
        uses: satackey/action-docker-layer-caching@v0.0.11
        with:
          key: docker-layers-${{ github.job }}-${{ hashFiles('**/WithoutRepository.Dockerfile') }}
      - name: build and push docker image
        id: tuplip
        uses: ./
        with:
          rootVersion: '0.3'
          repository: 'gofunky/ignore'
          path: './test'
          dockerfile: 'WithoutRepository.Dockerfile'
          username: ${{ secrets.DOCKER_USR }}
          password: ${{ secrets.DOCKER_PWD }}
          excludeBase: true
          filter: |
            mytag
      - run: echo "${{ steps.tuplip.outputs.tags }}" | sort > ${{ github.job }}.tags
      - uses: actions/upload-artifact@v2.1.4
        with:
          name: ${{ github.job }}-tags
          path: ${{ github.job }}.tags
  latest:
    name: build and push latest
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.tuplip.outputs.tags }}
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.head_ref }}
      - name: cache docker layers
        uses: satackey/action-docker-layer-caching@v0.0.11
        with:
          key: docker-layers-${{ github.job }}-${{ hashFiles('**/WithoutRepository.Dockerfile') }}
      - name: build and push docker image
        id: tuplip
        uses: ./
        with:
          rootVersion: latest
          exclusiveLatest: true
          repository: 'gofunky/ignore'
          path: './test'
          dockerfile: 'WithoutRepository.Dockerfile'
          username: ${{ secrets.DOCKER_USR }}
          password: ${{ secrets.DOCKER_PWD }}
          excludeMajor: true
          excludeMinor: true
      - run: echo "${{ steps.tuplip.outputs.tags }}" | sort > ${{ github.job }}.tags
      - uses: actions/upload-artifact@v2.1.4
        with:
          name: ${{ github.job }}-tags
          path: ${{ github.job }}.tags
  build-only:
    name: build only
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.tuplip.outputs.tags }}
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.head_ref }}
      - name: cache docker layers
        uses: satackey/action-docker-layer-caching@v0.0.11
        with:
          key: docker-layers-${{ github.job }}-${{ hashFiles('**/WithRepository.Dockerfile') }}
      - name: build docker image
        id: tuplip
        uses: ./
        with:
          rootVersion: '0.1.2'
          addLatest: true
          repository: 'gofunky/ignore'
          path: './test'
          dockerfile: 'WithRepository.Dockerfile'
          buildOnly: true
      - run: echo "${{ steps.tuplip.outputs.tags }}" | sort > ${{ github.job }}.tags
      - uses: actions/upload-artifact@v2.1.4
        with:
          name: ${{ github.job }}-tags
          path: ${{ github.job }}.tags
  straight:
    name: build and push tags straight
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.tuplip.outputs.tags }}
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.head_ref }}
      - name: cache docker layers
        uses: satackey/action-docker-layer-caching@v0.0.11
        with:
          key: docker-layers-${{ github.job }}-${{ hashFiles('**/WithoutRepository.Dockerfile') }}
      - name: build and push docker image
        id: tuplip
        uses: ./
        with:
          addLatest: true
          repository: 'gofunky/ignore'
          path: './test'
          dockerfile: 'WithoutRepository.Dockerfile'
          username: ${{ secrets.DOCKER_USR }}
          password: ${{ secrets.DOCKER_PWD }}
          straight: |
            one
            two:1.2.3
      - run: echo "${{ steps.tuplip.outputs.tags }}" | sort > ${{ github.job }}.tags
      - uses: actions/upload-artifact@v2.1.4
        with:
          name: ${{ github.job }}-tags
          path: ${{ github.job }}.tags
  verify:
    name: verify tags of ${{ matrix.test }}
    runs-on: ubuntu-latest
    needs:
      - latest
      - with-repository
      - from-file
      - build-only
      - without-repository
      - defaults
      - straight
    strategy:
      matrix:
        test:
          - latest
          - with-repository
          - from-file
          - build-only
          - without-repository
          - defaults
          - straight
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/download-artifact@v2.0.7
        with:
          name: ${{ matrix.test }}-tags
      - uses: LouisBrunner/diff-action@v0.1.1
        with:
          old: test/${{ matrix.test }}.tags
          new: ${{ matrix.test }}.tags
          mode: addition
          tolerance: same
          token: ${{ github.token }}
          title: ${{ matrix.test }}
          notify_check: true
          notify_issue: true
